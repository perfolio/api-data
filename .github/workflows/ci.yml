name: CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install poetry and config
      run: |
        pip install poetry
        poetry config virtualenvs.in-project false

    - uses: actions/cache@v2
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      run: |
        poetry run python -m pip install pip -U
        poetry install

    - name: Run pre-commit
      uses: pre-commit/action@v2.0.0

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install poetry and config
      run: |
        pip install poetry
        poetry config virtualenvs.in-project false

    - name: Install dependencies
      run: |
        poetry run python -m pip install pip -U
        poetry install

    - name: Run unit tests
      env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
      run: |
        make test
    - name: Report to codecov
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      run: |
        bash <(curl -s https://codecov.io/bash)
